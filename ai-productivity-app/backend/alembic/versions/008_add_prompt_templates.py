"""Add prompt templates table

Revision ID: 008_add_prompt_templates
Revises: 007_comprehensive_postgresql_enhancements, cebbacee5a60
Create Date: 2025-06-26 03:50:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '008_add_prompt_templates'
down_revision = ('007_comprehensive_postgresql_enhancements', '005_add_json_defaults')
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('prompt_templates',
    sa.Column('id', sa.Integer(), nullable=False, comment='Primary key'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='Record last update timestamp'),
    sa.Column('name', sa.String(length=255), nullable=False, comment='Template name'),
    sa.Column('description', sa.Text(), nullable=True, comment='Template description'),
    sa.Column('category', sa.String(length=100), nullable=False, comment='Template category'),
    sa.Column('system_prompt', sa.Text(), nullable=True, comment='System prompt for AI'),
    sa.Column('user_prompt_template', sa.Text(), nullable=False, comment='User prompt template with variables'),
    sa.Column('variables', postgresql.JSONB(astext_type=sa.Text()), nullable=False, comment='Template variables definition'),
    sa.Column('model_preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=False, comment='Model-specific preferences'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='Template owner'),
    sa.Column('is_public', sa.Boolean(), nullable=False, comment='Whether template is public'),
    sa.Column('is_default', sa.Boolean(), nullable=False, comment='Whether template is a default/system template'),
    sa.Column('usage_count', sa.Integer(), nullable=False, comment='Number of times template was used'),
    sa.CheckConstraint("category IN ('Code Generation', 'Code Review', 'Documentation', 'Testing', 'Debugging', 'Refactoring', 'Architecture', 'Custom')", name='category_valid'),
    sa.CheckConstraint('char_length(name) >= 1', name='name_min_length'),
    sa.CheckConstraint('char_length(name) <= 255', name='name_max_length'),
    sa.CheckConstraint('char_length(user_prompt_template) >= 1', name='user_prompt_template_min_length'),
    sa.CheckConstraint('usage_count >= 0', name='usage_count_non_negative'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prompt_templates_id'), 'prompt_templates', ['id'], unique=False)
    op.create_index('ix_prompt_templates_category', 'prompt_templates', ['category'], unique=False)
    op.create_index('ix_prompt_templates_user_category', 'prompt_templates', ['user_id', 'category'], unique=False)
    op.create_index('ix_prompt_templates_user_public', 'prompt_templates', ['user_id', 'is_public'], unique=False)
    op.create_index('ix_prompt_templates_public_category', 'prompt_templates', ['is_public', 'category'], unique=False, postgresql_where=sa.text('is_public = true'))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_prompt_templates_public_category', table_name='prompt_templates')
    op.drop_index('ix_prompt_templates_user_public', table_name='prompt_templates')
    op.drop_index('ix_prompt_templates_user_category', table_name='prompt_templates')
    op.drop_index('ix_prompt_templates_category', table_name='prompt_templates')
    op.drop_index(op.f('ix_prompt_templates_id'), table_name='prompt_templates')
    op.drop_table('prompt_templates')
    # ### end Alembic commands ###